# https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/configuring-openid-connect-in-azure
name: oidc-azcli-terraform
  on:
    push:
      branches: none # [ main ]
      paths:
      - '.github/workflows/090-oidc-azure.yml'
    pull_request:
      branches: none # [ main ]
      
    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

  permissions:
        id-token: write
        contents: read
############################## Jobs
  jobs: 
    build-and-deploy:
      runs-on: ubuntu-latest
      steps:
        - name: 'Az CLI login'
          uses: azure/login@v1
          with:
            client-id: ${{ secrets.AZURE_AD_CLIENT_ID }}
            tenant-id: ${{ secrets.AZURE_AD_TENANT_ID }}
            subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
            #RESOURCE_GROUP: rg-ninety-test-01
            #STORAGE_ACCOUNT: stog01
            #CONTAINER_NAME: stgct01
############################## Az Login            
        - name: 'Run az commands'
          run: |
            az account show -o table
            az group list -o table
############################## Az Login 
        - name: Checkout
          uses: actions/checkout@v4.1.1

  # Install the preferred version of Terraform CLI 
        - name: Setup Terraform
          uses: hashicorp/setup-terraform@v2.0.3
          with:
            terraform_version: 1.6.6
  # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
        - name: Terraform Init
          id: init
          #run: terraform init -backend-config="storage_account_name=$STORAGE_ACCOUNT" -backend-config="container_name=$CONTAINER_NAME" -backend-config="resource_group_name=$RESOURCE_GROUP"
          run: terraform init
          env:
            ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
            ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
            ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
            ARM_USE_OIDC: true
        - name: Terraform Plan
          id: plan
          #run: terraform init -backend-config="storage_account_name=$STORAGE_ACCOUNT" -backend-config="container_name=$CONTAINER_NAME" -backend-config="resource_group_name=$RESOURCE_GROUP"
          run: terraform plan
          env:
            ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
            ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
            ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
            ARM_USE_OIDC: true
        - name: Terraform Apply
          id: apply
          #run: terraform init -backend-config="storage_account_name=$STORAGE_ACCOUNT" -backend-config="container_name=$CONTAINER_NAME" -backend-config="resource_group_name=$RESOURCE_GROUP"
          run: terraform apply --auto-approve
          env:
            ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
            ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
            ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
            ARM_USE_OIDC: true
